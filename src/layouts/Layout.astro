---
import "@styles/main.css";
const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} - AskExperts</title>
    <style is:inline>
      @layer reset, global, components, overrides;

      #logInScreen {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: transparent;
        backdrop-filter: blur(0);
        z-index: 300;
        /* display: flex; */
        justify-content: center;
        align-items: center;
        transition: all 0.45s ease-in-out;
        .inner {
          display: flex;
          flex-direction: column;
          padding: var(--space-l) var(--space-xl);

          background-color: var(--primary03);
          color: var(--secondary02);
          gap: var(--space-xs);
          border-radius: 30px;
          transform: scale(0);
          transition: all 0.2s ease-in-out;
          opacity: 60%;
        }
      }
      #logInScreen.active {
        /* display: flex; */
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(16px);
        .inner {
          transform: scale(1);
          opacity: 100%;
        }
      }
      #header {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        z-index: 200;
        display: flex;
        padding: var(--space-m);
        /* justify-content: space-between; */
        justify-content: center;
        background-color: rgba(27, 27, 27, 0.91);
        backdrop-filter: blur(10.5px);
        color: var(--secondary02);
        align-items: center;

        .inner {
          display: flex;
          width: var(--headerInnerWidth);
          max-width: var(--headerInnerWidth);
          justify-content: space-between;
          align-items: center;
          flex-shrink: 0;
          .title {
            font-size: var(--step-1);
            margin: 0;
          }
          ul.menu-bar {
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: var(--space-l);
            li {
              list-style: none;
              a {
                color: var(--secondary02);
                text-decoration: none;
              }
            }
          }
        }

        /*Burger menu*/
        .burger {
          display: none;
          padding: 10px;
          width: 10px;
          aspect-ratio: 1 / 1;
          position: relative;
          transform: scale(1.1);

          .line {
            position: absolute;
            width: 20px;
            height: 2px;
            background-color: var(--secondary02);

            transition: 0.2s linear;
            left: 0;

            &:nth-child(1) {
              top: 10%;
              transform-origin: center;
            }
            &:nth-child(2) {
              top: 50%;
            }
            &:nth-child(3) {
              top: 90%;
              transform-origin: center;
            }
          }
          &.active .line {
            width: 25px;
          }
          &.active .line:nth-child(1) {
            transform: rotate(45deg);
            top: 50%;
            transition: 0.2s linear;
          }

          &.active .line:nth-child(2) {
            opacity: 0;
            transition: 0.15s linear;
          }

          &.active .line:nth-child(3) {
            top: 50%;
            transform: rotate(-45deg);
            transition: 0.2s linear;
          }
        }
        #burgerContent {
          transform: translateY(-100vh);
          opacity: 0;
          transition: all 0.2s ease-in-out;
          display: none;
          position: fixed;
          left: 0;
          top: 0;
          width: 100vw;
          background-color: rgba(27, 27, 27, 0.671);
          backdrop-filter: blur(10.5px);
          .burger-menu {
            width: 100%;
            padding: 0 var(--space-l);
            display: flex;
            flex-direction: column;
            margin-top: 0;

            li {
              margin-top: var(--space-m);
              list-style: none;
              display: flex;
              button,
              a {
                text-decoration: none;
                color: var(--secondary02);
                padding: 0;
                margin: 0;
              }
            }
          }
        }
      }

      main {
        display: grid;
        grid-template-columns: var(--padGrid);
        & > * {
          grid-column: 2 / 4;
        }
      }

      @media screen and (max-width: 660px) {
        /*container query kunne ikke bruges da headeren er fixed med en bredde p√• 100vw*/
        #header {
          ul.menu-bar {
            display: none !important;
          }

          #logIn {
            display: none !important;
          }

          .burger {
            display: block !important;
          }

          #burgerContent {
            display: flex !important;
          }
        }
      }
    </style>
  </head>
  <body>
    <div id="logInScreen" class="" style="display: none">
      <div class="inner">
        <h2>Dashboard Login</h2>
        <input type="text" placeholder="Username" />
        <input type="password" placeholder="Password" />
      </div>
    </div>
    <div id="headerSpacer"></div>
    <header id="header">
      <div class="inner">
        <a class="title" href="">
          AskExperts <!-- Titel Styling -->
        </a>
        <ul class="menu-bar">
          <li>
            <a href="#"> Home </a>
          </li>
          <li>
            <a href="#"> Case Study </a>
          </li>
          <li>
            <a href="#"> Team </a>
          </li>
          <li>
            <a href="#"> About </a>
          </li>
        </ul>
        <button class="cta2" id="logIn">Login</button>
        <!-- <button class="cta2 logIn">Login</button> -->
        <button class="burger" id="burgerToggle">
          <div class="line"></div>
          <div class="line"></div>
          <div class="line"></div>
        </button>
      </div>
      <div id="burgerContent">
        
        <ul class="burger-menu">
          <li>
            <a href="#"> Home </a>
          </li>
          <li>
            <a href="#"> Case Study </a>
          </li>
          <li>
            <a href="#"> Team </a>
          </li>
          <li>
            <a href="#"> About </a>
          </li>
          <li>
            <button class="logIn">Login</button>
          </li>
        </ul>
      </div>
    </header>
    <main>
      <slot />
    </main>
    <script is:inline>
      const logIn = document.getElementById("logIn");
      const logInProxies = document.querySelectorAll(".logIn");
      const logInScreen = document.getElementById("logInScreen");

      const header = document.getElementById("header");
      const headerSpacer = document.getElementById("headerSpacer");
      const burgerContent = document.getElementById("burgerContent");

      const burgerToggle = document.getElementById("burgerToggle");

      logIn.addEventListener("click", () => {
        console.log("logIn pressed");
        logInScreen.style.display = "flex";
        requestAnimationFrame(() => {
          logInScreen.classList.add("active");
        });
      });
      logInScreen.addEventListener("click", () => {
        logInScreen.classList.remove("active");
      });
      logInScreen.addEventListener("transitionend", () => {
        if (!logInScreen.classList.contains("active")) {
          logInScreen.style.display = "none";
        }
      });

      logInProxies.forEach((logInProxy) => {
        logInProxy.addEventListener("click", () => {
          console.log("logIn proxy clicked");
          logIn.click();
        });
      });

      function resizeHeaderSpacer() {
        const headerHeight = header.clientHeight;
        headerSpacer.style.height = headerHeight + "px";
        burgerContent.style.marginTop = headerHeight + "px";
      }

      function toggleBurger() {
        burgerToggle.classList.toggle("active");
        checkBurger();
      }

      function checkBurger() {
        if (burgerToggle.classList.contains("active")) {
          burgerContent.style.transform = "translateY(0)";
          burgerContent.style.opacity = "1";
        } else {
          burgerContent.style.transform = "translateY(-100vh)";
          burgerContent.style.opacity = "0";
        }
      }

      burgerToggle.addEventListener("click", toggleBurger);
      window.addEventListener("resize", resizeHeaderSpacer);
      resizeHeaderSpacer();
      checkBurger();
    </script>
  </body>
  <footer></footer>
</html>
